#! /bin/sh

#$Id$
#{{ ansible_managed }}

IPTABLES="/sbin/iptables"
WHITE_IP="{{ ansible_eth0.ipv4.address }}"



echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter
echo 1 > /proc/sys/net/ipv4/ip_forward
modprobe ip_conntrack
modprobe iptable_nat
modprobe ip_nat_ftp
modprobe ipt_LOG



$IPTABLES -P INPUT DROP
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD DROP

$IPTABLES -F
$IPTABLES -X
$IPTABLES -t nat -F PREROUTING
$IPTABLES -t nat -F POSTROUTING

############ DELETE IF ALL WORKING FINE ######
#$IPTABLES -A INPUT -j ACCEPT
##############################################


## DENY SECTIONS
$IPTABLES -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
$IPTABLES -A INPUT -p tcp --tcp-flags SYN,ACK SYN,ACK -m state --state NEW -j DROP

## local interface, allow all
$IPTABLES -A INPUT -i lo -j ACCEPT

## ALLOW PACKETS IF CONNECTION ESTABLISHED
$IPTABLES -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPTABLES -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT


## access from home net
{% for ip in iptables.white_list_ips %}
$IPTABLES -A INPUT -s {{ ip }} -j ACCEPT
{% endfor %}


## Deny nmap
$IPTABLES -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j LOG --log-prefix "Stealth scan"
$IPTABLES -A INPUT -p tcp --tcp-flags ACK,FIN FIN -j DROP

## access from white ip
{% for ip in hostvars[inventory_hostname].ansible_all_ipv4_addresses %}
$IPTABLES -A INPUT -s {{ ip }} -j ACCEPT
{% endfor %}



## defence for ssh for server

$IPTABLES -N SSH
$IPTABLES -A SSH -m recent --update --seconds 600 --hitcount 5 -j DROP
$IPTABLES -A SSH -m recent --set -j ACCEPT
{% for ip in iptables.white_list_ips %}
$IPTABLES -A INPUT -p tcp ! -s {{ ip }} -m conntrack --ctstate NEW --dport 22 -j SSH
{% endfor %}


#$IPTABLES -A INPUT -p tcp ! -s 10.10.100.110/32 -m state --state NEW --dport 22 -m recent --update --seconds 10 -j DROP
#$IPTABLES -A INPUT -p tcp -m state --state NEW --dport 22 -m recent --set -j ACCEPT

{% for port in iptables.open_ports %}
$IPTABLES -A INPUT -p tcp --syn -m multiport --destination-ports {{ port }} -j ACCEPT
{% endfor %}



####################################


## ping
$IPTABLES -A INPUT -p ICMP --icmp-type 8 -j ACCEPT
## deny other ICMP packets
#$IPTABLES -A INPUT -p icmp -j DROP
## allow ICMP
# $IPTABLES -A INPUT -p ICMP -j ACCEPT

## other reject
$IPTABLES -A INPUT -j DROP
#$IPTABLES -A FORWARD -j DROP
$IPTABLES -A FORWARD -j ACCEPT